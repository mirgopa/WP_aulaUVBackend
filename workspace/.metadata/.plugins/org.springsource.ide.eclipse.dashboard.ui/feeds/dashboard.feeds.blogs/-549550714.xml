<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2019-04-03T13:13:00Z</updated>
  <entry>
    <title>Spring Boot 1.5.20 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/03/spring-boot-1-5-20-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2019-04-03:3625</id>
    <updated>2019-04-03T13:13:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Boot 1.5.20 has been released and is now available from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and Maven Central.&lt;/p&gt;
&lt;p&gt;Spring Boot 1.5.20 is a maintenance release that includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v1.5.20.RELEASE"&gt;over 30 dependency updates and selected bug fixes&lt;/a&gt;. These upgrades include Spring Security OAuth 2.0.17 which addresses a &lt;a href="https://spring.io/blog/2019/02/21/cve-2019-3778-spring-security-oauth-2-3-5-2-2-4-2-1-4-2-0-17-released"&gt;recently announced CVE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you haven’t already upgraded to Spring Boot 2, please consider doing so as support for 1.x will &lt;a href="https://spring.io/blog/2018/07/30/spring-boot-1-x-eol-aug-1st-2019"&gt;end on August 1st 2019&lt;/a&gt;. &lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/1.5.20.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.1.5, 5.0.12, 4.2.12 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/03/spring-security-5-1-5-5-0-12-4-2-12-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Joe Grandja</name>
    </author>
    <id>tag:spring.io,2019-04-03:3624</id>
    <updated>2019-04-03T13:04:05Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community I am pleased to announce the release of Spring Security 5.1.5 (&lt;a href="https://github.com/spring-projects/spring-security/milestone/140?closed=1"&gt;changelog&lt;/a&gt;), 5.0.12 (&lt;a href="https://github.com/spring-projects/spring-security/milestone/138?closed=1"&gt;changelog&lt;/a&gt;), and 4.2.12 (&lt;a href="https://github.com/spring-projects/spring-security/milestone/139?closed=1"&gt;changelog&lt;/a&gt;). These releases deliver bug fixes along with some minor improvements. Users are encouraged to update to the latest patch release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: WebMvc.fn - the functional DSL for Spring MVC</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/03/spring-tips-webmvc-fn-the-functional-dsl-for-spring-mvc" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-30:3620</id>
    <updated>2019-04-03T00:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! Welcome to another installment of Spring Tips in which I look at the &lt;em&gt;just-landed-on-master&lt;/em&gt; WebMvc.fn programming model in Spring MVC. WebMvc.fn is the functional DSL for Spring MVC that, I&amp;rsquo;ll bet, you didn&amp;rsquo;t know you wanted! This is &lt;em&gt;awesome&lt;/em&gt;! &lt;/p&gt;
&lt;p&gt;speaker: &lt;a href="http://twitter.com/Starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vZV2_9KVHJU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - April 2nd, 2019</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/02/this-week-in-spring-april-2nd-2019" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-04-02:3622</id>
    <updated>2019-04-02T06:41:01Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans and welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m in New York City for the Kafka Summit where I&amp;rsquo;ll be joining the &lt;a href="https://twitter.com/tlberglund"&gt;excellent Tim Berglund&lt;/a&gt;, head of developer experience at Confluent, and &lt;a href="https://twitter.com/WattersJames"&gt;James Watters&lt;/a&gt;, SVP at Pivotal, to talk about why Pivotal and Confluent are better together. Join us! Then, next week it&amp;rsquo;s off to South Africa (for the SpringOne Tour shows in &lt;a href="https://springonetour.io/2019/cape-town"&gt;Capetown&lt;/a&gt; and &lt;a href="https://springonetour.io/2019/johannesburg"&gt;Johannesburg&lt;/a&gt; and then it&amp;rsquo;s off to &lt;a href="https://conference.mscc.mu/speaker/f2617bc2-d35e-4fd7-9cea-02060f3e1608"&gt;to Mauritius for the DevConf&lt;/a&gt;. If you&amp;rsquo;re in any of those places, &lt;a href="https://twitter.com/Starbuxman"&gt;don&amp;rsquo;t hesitate to say hi!&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&#xD;
&lt;img src="https://pbs.twimg.com/media/D3F0qgiX0AEz1zD.jpg:large" width  = "600" /&gt;&#xD;
&lt;div&gt;&lt;em&gt; LTR: Confluent co-founder Jay Kreps, Tim Berglund, me and Pivotal SVP James Watters&lt;/em&gt;&lt;/div&gt;&#xD;
&lt;/div&gt;
&lt;p&gt;And without further ado, let&amp;rsquo;s get to it! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/04/01/spring-framework-5-1-6-5-0-13-and-4-3-23-available-now"&gt;Spring Framework 5.1.6, 5.0.13 and 4.3.23 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/29/spring-tools-4-2-0-released"&gt;Spring Tools 4.2.0 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Last week on &lt;a href="https://twitter.com/bootifulpodcast"&gt;&lt;em&gt;A Bootiful Podcast&lt;/em&gt; (@BootifulPodcast)&lt;/a&gt; I talked to &lt;a href="https://spring.io/blog/2019/03/29/josh-mckenty-better-josh-on-data-sovereignty-microservices-cloud-foundry-python-the-cloud-pivotal-and-more"&gt;Josh Mckenty about data sovereignty, microservices, Cloud Foundry, Python, the cloud, Pivotal, and more&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you get one blog to read, read this one on the &lt;a href="https://spring.io/blog/2019/03/28/reactor-debugging-experience"&gt;Reactor Debugging Experience&lt;/a&gt;. It&amp;rsquo;s &lt;em&gt;amazing&lt;/em&gt;!&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/27/spring-tool-suite-3-9-8-released"&gt;Spring Tool Suite 3.9.8 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to know what makes &lt;a href="https://twitter.com/springcentral/status/1112804577659817990"&gt;Pivotal Cloud Foundry the best place to run Spring Boot applications?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://phauer.com/2019/focus-integration-tests-mock-based-tests/"&gt;Focus on Integration Tests Instead of Mock-Based Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A gentle reminder that you should &lt;a href="https://twitter.com/springframework/status/1112638165351874562"&gt;be upgrading to Spring Framework 5.1x as soon as possible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/SaraTorrey/status/1111305944909127680"&gt;Sara Torrey diagrammed her notes introducing &lt;/a&gt; Spring Boot and they&amp;rsquo;re really cool!&lt;/li&gt;
  &lt;li&gt;Check out Pivotal&amp;rsquo;s Ben Hale on &lt;a href="https://twitter.com/r2dbc/status/1111203411020656641"&gt;the state of Reactive Programming in the enterprise, RSocket and R2DBC on the latest OffHeap podcast episode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Missed this white-hot Spring Tip introducing ways to make Spring Boot lazy &lt;em&gt;and&lt;/em&gt; fast? &lt;a href="https://twitter.com/springcentral/status/1110982329655283713"&gt;Now&amp;rsquo;s the time to watch&lt;/a&gt;! It&amp;rsquo;s not even ten minute&amp;rsquo;s long!&lt;/li&gt;
  &lt;li&gt;We&amp;rsquo;re conducting a survey that looks at how we can improve the &lt;a href="http://start.Spring.io"&gt;Spring Initializr (start dot Spring dot io)&lt;/a&gt;, a topic near and dear to my heart. &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScMnjpp_jKMvM5ijru5cCZJYlk6cKDdKaNr54raQV-fI24k5w/viewform?ts=5c8f9ee0"&gt;Please feedback here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Event-driven Java with Spring Cloud Stream and Azure Event Hubs [Guest Post]</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/02/event-driven-java-with-spring-cloud-stream-and-azure-event-hubs-guest-post" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Ben Wilcock</name>
    </author>
    <id>tag:spring.io,2019-03-28:3615</id>
    <updated>2019-04-02T00:00:00Z</updated>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Asir Selvasingh | Principal PM Architect | Microsoft – Java on Azure&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring Cloud Stream Binder for Azure Event Hubs is now generally available. &lt;/p&gt;
&lt;p&gt;It is simple to build highly scalable event-driven Java apps using Spring Cloud Stream with Event Hubs, a fully managed, real-time data ingestion service on Azure that is resilient and reliable service for any situation; this includes emergencies, thanks to its geo-disaster recovery and geo-replication features.&lt;/p&gt;
&lt;p&gt;Spring Cloud Stream provides a binder abstraction for popular message broker implementations. It provides a flexible programming model built on already established and familiar Spring idioms and best practices, including support for persistent pub/sub semantics, consumer groups, and stateful partitions. Now, developers can use the same patterns for building Java apps with Event Hubs. &lt;/p&gt;
&lt;p&gt;&lt;img src="https://static.spring.io/blog/bwilcock/20190328/[001]-Guest-Post_Event-driven-Java-with-Spring-Cloud-Stream-and-Azure-Event-Hubs.png" alt="Diagram showing Spring Apps inputting to Azure Event Hubs and outputting to other Spring apps, using the Azure event hubs binder and channels." title="Spring Apps inputting to Azure Event Hubs and outputting to other Spring apps, using the Azure event hubs binder and channels" /&gt;&lt;/p&gt;&lt;h2&gt;&lt;a href="#getting-started" class="anchor" name="getting-started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-cloud-stream-binder-java-app-azure-event-hub?view=azure-java-stable"&gt;this tutorial&lt;/a&gt; and build a Java-based Spring Cloud Stream Binder application using the Spring Boot Initializer with Azure Event Hubs. Go to the Azure portal and create a new Event Hubs namespace. Add the following Maven dependency into your Java project.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependency&amp;gt; &#xD;
    &amp;lt;groupId&amp;gt;com.microsoft.azure&amp;lt;/groupId&amp;gt; &#xD;
	&amp;lt;artifactId&amp;gt;spring-cloud-azure-eventhubs-stream-binder&amp;lt;/artifactId&amp;gt; &#xD;
    &amp;lt;version&amp;gt;1.1.0.RC2&amp;lt;/version&amp;gt; &#xD;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#publish-messages" class="anchor" name="publish-messages"&gt;&lt;/a&gt;Publish messages&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;@EnableBinding(Source.class)&lt;/code&gt; to annotate a source class and publish messages to Event Hubs with Spring Cloud Stream patterns. You can customize the output channel for the Source with configurations. &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Destination: specify which Event Hub to connect with the output channel&lt;/li&gt;
  &lt;li&gt;Sync/Async: specify the mode to produce the messages&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#subscribe-to-messages" class="anchor" name="subscribe-to-messages"&gt;&lt;/a&gt;Subscribe to messages&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;@EnableBinding(Sink.class)&lt;/code&gt; to annotate a sink class and consume messages from Event Hubs. You can also customize the input channel with configurations. Please refer to this &lt;a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-cloud-stream-binder-java-app-azure-event-hub"&gt;tutorial&lt;/a&gt; for the full list.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Destination: specify an Event Hub to bind with the input channel&lt;/li&gt;
  &lt;li&gt;Customer Group: specify a &lt;a href="https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-features#consumer-groups"&gt;Consumer Group&lt;/a&gt; to receive messages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try building event-driven Java apps using Spring Cloud Stream Binder for Event Hubs &lt;/p&gt;&lt;h2&gt;&lt;a href="#try-out-a-java-app-using-a-href-https-docs-microsoft-com-en-us-java-azure-spring-framework-configure-spring-cloud-stream-binder-java-app-azure-event-hub-view-azure-java-stable-spring-cloud-stream-binder-on-azure-event-hubs-a-and-let-us-know-what-you-think-via-e-mail-or-comments-below" class="anchor" name="try-out-a-java-app-using-a-href-https-docs-microsoft-com-en-us-java-azure-spring-framework-configure-spring-cloud-stream-binder-java-app-azure-event-hub-view-azure-java-stable-spring-cloud-stream-binder-on-azure-event-hubs-a-and-let-us-know-what-you-think-via-e-mail-or-comments-below"&gt;&lt;/a&gt;Try out a Java app using &lt;a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-cloud-stream-binder-java-app-azure-event-hub?view=azure-java-stable"&gt;Spring Cloud Stream Binder on Azure Event Hubs&lt;/a&gt; and let us know what you think via e-mail or comments below.&lt;/h2&gt;&lt;h2&gt;&lt;a href="#additional-resources" class="anchor" name="additional-resources"&gt;&lt;/a&gt;Additional Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Tutorial: &lt;a href="https://docs.microsoft.com/en-us/java/azure/spring-framework/configure-spring-cloud-stream-binder-java-app-azure-event-hub?view=azure-java-stable"&gt;How to create a Spring Cloud Stream Binder application with Azure Event Hubs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tutorial: &lt;a href="https://docs.microsoft.com/en-us/java/azure/spring-framework"&gt;Spring on Azure Developer Hub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tutorial: &lt;a href="https://docs.microsoft.com/en-us/java/azure/"&gt;Java on Azure Developer Hub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GitHub: &lt;a href="https://github.com/Microsoft/spring-cloud-azure"&gt;Spring Cloud for Azure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Learn more: &lt;a href="https://azure.microsoft.com/en-us/services/event-hubs/"&gt;Azure Event Hubs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#about-the-author" class="anchor" name="about-the-author"&gt;&lt;/a&gt;About the Author&lt;/h3&gt;
&lt;p&gt;Asir started his software engineering career in the early days of Java, in 1995, and built enterprise products, applications and open source projects for many years. Now, he is a Principal PM Architect at Microsoft focusing on a full gamut of services and tools for developers to build and scale Java workloads on Azure. He works closely with the community, delivering sessions at Java conferences and fostering strategic relations that enrich the Java ecosystem.&lt;/p&gt;
&lt;p&gt;In his free-time, Asir loves to tinker with Java apps on Azure, which serves as a creative outlet from his day job. He’s passionate about cooking and photography and enjoys quality family time traveling the world.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 5.1.6, 5.0.13 and 4.3.23 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2019/04/01/spring-framework-5-1-6-5-0-13-and-4-3-23-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Stéphane Nicoll</name>
    </author>
    <id>tag:spring.io,2019-04-01:3621</id>
    <updated>2019-04-01T08:41:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Framework &lt;code&gt;5.1.6.&lt;/code&gt;, &lt;code&gt;5.0.13&lt;/code&gt; and &lt;code&gt;4.3.23&lt;/code&gt; are available from &lt;a href="https://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; as well as Maven Central now.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;5.1.6&lt;/code&gt; includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.1.6.RELEASE"&gt;49 fixes and improvements&lt;/a&gt;. Spring Framework &lt;code&gt;5.0.13&lt;/code&gt; is the last regular release of the &lt;code&gt;5.0.x&lt;/code&gt; line and includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.0.13.RELEASE"&gt;25 fixes and selected improvements&lt;/a&gt;. At this point, we expect all &lt;code&gt;5.x&lt;/code&gt; users to upgrade to &lt;code&gt;5.1.6&lt;/code&gt;. We&amp;rsquo;ve also released &lt;code&gt;4.3.23&lt;/code&gt; that includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v4.3.23.RELEASE"&gt;20 fixes and selected improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As usual, those maintenance releases will be used for the upcoming Spring Boot &lt;code&gt;1.5.20&lt;/code&gt;, &lt;code&gt;2.0.9&lt;/code&gt;, &lt;code&gt;2.1.4&lt;/code&gt; releases coming up later this week.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://projects.spring.io/spring-framework/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-framework/docs/5.1.6.RELEASE/spring-framework-reference"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Tools 4.2.0 released</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/29/spring-tools-4-2-0-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2019-03-29:3619</id>
    <updated>2019-03-29T09:01:36Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 4.2.0 release of the Spring Tools 4 for Eclipse, Visual Studio Code, and Atom.&lt;/p&gt;
&lt;p&gt;Highlights from this release include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; new: Allow configuration of VM arguments for LSP process &amp;ldquo;PropertiesLauncher&amp;rdquo; (&lt;a href="https://github.com/spring-projects/sts4/issues/211"&gt;#211&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; performance: major performance improvements to symbol indexing infrastructure by caching created symbols across language server starts&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; performance: replaced internal type indexing with communication to JDT (language server) to save time and memory spend for keeping our own type index&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; new: distribution updated to Eclipse 2019-03&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; new: enables Spring JMX support now by default in Spring Boot launch configs&lt;/li&gt;
  &lt;li&gt;various additional bug fixes and improvements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To download the distribution for Eclipse and find links to the marketplace entries for Visual Studio Code and Atom, please go visit:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Tools 4: &lt;a href="https://spring.io/tools/"&gt;https://spring.io/tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Detailed changes can be found here: &lt;a href="https://github.com/spring-projects/sts4/wiki/Changelog#2019-03-28-420-release"&gt;https://github.com/spring-projects/sts4/wiki/Changelog#2019-03-28-420-release&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Tools 4.2.1 is scheduled to be released in late April 2019.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Josh Mckenty - "Better Josh" - on data sovereignty, microservices, Cloud Foundry, Python, the cloud, Pivotal, and more</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/29/a-bootiful-podcast-josh-mckenty-better-josh-on-data-sovereignty-microservices-cloud-foundry-python-the-cloud-pivotal-and-more" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-29:3618</id>
    <updated>2019-03-29T05:31:00Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! In this week&amp;rsquo;s installment of a Bootiful Podcast I, &lt;a href="http://twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;, welcome &lt;a href="http://twitter.com/JMCkenty"&gt;Josh Mckenty&lt;/a&gt; - or &amp;ldquo;better Josh,&amp;rdquo; as I affectionately call him - to the show to discuss Pivotal, Cloud Foundry, Python, microservices, and data sovereignty, among other things.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://twitter.com/JMCkenty"&gt;Josh McKenty (@jmckenty) on Twitter&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/597710070&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true"&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Reactor Debugging Experience</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/28/reactor-debugging-experience" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Sergei Egorov</name>
    </author>
    <id>tag:spring.io,2019-03-28:3616</id>
    <updated>2019-03-28T15:59:00Z</updated>
    <content type="html">&lt;p&gt;In the &lt;a href="https://projectreactor.io"&gt;Project Reactor&lt;/a&gt; team, we believe that the debugging experience of the libraries you rely upon is as important as, let&amp;rsquo;s say, the feature set or performance.&lt;/p&gt;
&lt;p&gt;Today, we&amp;rsquo;re excited to announce two new experimental projects in the Reactor family!&lt;/p&gt;&lt;h2&gt;&lt;a href="#blockhound-a-new-kid-on-the-block" class="anchor" name="blockhound-a-new-kid-on-the-block"&gt;&lt;/a&gt;BlockHound - a new kid on the block&lt;/h2&gt;
&lt;p&gt;One of the most common rookie mistakes is to block Java threads that are supposed to run only non-blocking code (e.g., &lt;code&gt;Schedulers.parallel()&lt;/code&gt;).&lt;br/&gt;It is one of the most harmful issues because you may block unrelated processing or even create a deadlock!&lt;/p&gt;
&lt;p&gt;Consider the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;Flux.range(0, Runtime.getRuntime().availableProcessors() * 2)&#xD;
        .subscribeOn(Schedulers.parallel())&#xD;
        .map(i -&amp;gt; {&#xD;
            CountDownLatch latch = new CountDownLatch(1);&#xD;
&#xD;
            Mono.delay(Duration.ofMillis(i * 100))&#xD;
                .subscribe(it -&amp;gt; latch.countDown());&#xD;
&#xD;
            try {&#xD;
                latch.await();&#xD;
            } catch (InterruptedException e) {&#xD;
                throw new RuntimeException(e);&#xD;
            }&#xD;
&#xD;
            return i;&#xD;
        })&#xD;
        .blockLast();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;How long will it take to run this code? 1 second? 10 seconds?&lt;br/&gt;What if I tell you that it will never exit and create a deadlock? Here is why:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;We create &lt;code&gt;N * 2&lt;/code&gt; signals, where &lt;code&gt;N&lt;/code&gt; is the number of CPUs our JVM can use.&lt;/li&gt;
  &lt;li&gt;We subscribe using &lt;code&gt;Schedulers.parallel&lt;/code&gt; - a bounded pool limited to &lt;code&gt;N&lt;/code&gt; threads.&lt;/li&gt;
  &lt;li&gt;For every signal, we schedule another task for the parallel scheduler (&lt;code&gt;Mono.delay&lt;/code&gt; implicitly uses &lt;code&gt;Schedulers.parallel&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Our logic assumes that the delay will be processed shortly and the latch will eventually unblock.&lt;/li&gt;
  &lt;li&gt;However, all N threads will be waiting for their latches, and the delay task will never get executed!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Even of you don&amp;rsquo;t block all threads and block only some, you&amp;rsquo;re preventing other unrelated tasks from advancing. The most probable result is that the performance will degrade.&lt;/p&gt;
&lt;p&gt;The problem is especially notable when you&amp;rsquo;re &lt;a href="https://projectreactor.io/docs/core/release/reference/#faq.wrap-blocking"&gt;migrating your old blocking code to the reactive approach&lt;/a&gt;. Even the most experienced code reviewer may not spot a blocking call when your &lt;a href="http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/"&gt;functions are of the same color&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;This is why we created &lt;a href="https://github.com/reactor/BlockHound"&gt;BlockHound&lt;/a&gt; - a Java agent to detect blocking calls from non-blocking threads.&lt;br/&gt;Unlike other solutions, it instruments the original methods (even native ones!) and leaves no way to call a blocking method, even with reflection!&lt;/p&gt;
&lt;p&gt;Now, if we add it to our app as &lt;a href="https://github.com/reactor/BlockHound/tree/master/docs/quick_start.md"&gt;described in the docs&lt;/a&gt;, we will get the following exception:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;java.lang.Error: Blocking call! sun.misc.Unsafe#park&#xD;
  at reactor.BlockHound$Builder.lambda$new$0(BlockHound.java:154)&#xD;
  at reactor.BlockHound$Builder.lambda$install$8(BlockHound.java:254)&#xD;
  at reactor.BlockHoundRuntime.checkBlocking(BlockHoundRuntime.java:43)&#xD;
  at sun.misc.Unsafe.park(Unsafe.java)&#xD;
  at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)&#xD;
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)&#xD;
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)&#xD;
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)&#xD;
  at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)&#xD;
  at com.example.demo.BlockingCode.lambda$main$1(BlockingCode.java:24)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;await&lt;/code&gt; calls &lt;code&gt;Unsafe#park&lt;/code&gt; internally for the awaiting logic. We don&amp;rsquo;t want our Thread to be parked or blocked, and BlockHound protects us from that!&lt;/p&gt;
&lt;p&gt;Read the &lt;a href="https://github.com/reactor/BlockHound/blob/master/docs/how_it_works.md"&gt;how it works&lt;/a&gt; page if you want to know the implementation details.&lt;br/&gt;TL;DR: it wraps original methods and adds only two method calls to them.&lt;/p&gt;
&lt;p&gt;You can run it in tests or on your QA/staging environments without losing performance. Holy Atom, you can even try running it in production, given the low overhead! :)&lt;/p&gt;
&lt;p&gt;BlockHound works with Project Reactor and RxJava 2, and you can &lt;a href="https://github.com/reactor/BlockHound/blob/master/docs/custom_integrations.md"&gt;write your own integration&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#reactor-debug-agent-production-ready-assembly-back-tracing" class="anchor" name="reactor-debug-agent-production-ready-assembly-back-tracing"&gt;&lt;/a&gt;Reactor Debug agent - production-ready assembly back-tracing&lt;/h2&gt;
&lt;p&gt;Debugging Reactive code can sometimes be challenging because of the functional programming aspect of it: Instead of commanding exactly what to perform on the data, you &lt;em&gt;declare&lt;/em&gt; how the data should flow through the system. It means that the declaration and the execution happen at different moments of time.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You can read more about it in Simon&amp;rsquo;s great article:&lt;br/&gt;&lt;a href="https://spring.io/blog/2019/03/06/flight-of-the-flux-1-assembly-vs-subscription"&gt;https://spring.io/blog/2019/03/06/flight-of-the-flux-1-assembly-vs-subscription&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Reactor, we call it &amp;ldquo;Assembly time&amp;rdquo; and &amp;ldquo;Execution time&amp;rdquo;. During Assembly time, you &amp;ldquo;design&amp;rdquo; your pipeline by calling &lt;code&gt;myFlux.map(i -&amp;gt; i * 2).filter(5 % i == 1).single()&lt;/code&gt; and other operators. Some time later, this &amp;ldquo;pipeline definition&amp;rdquo; will be used to process the signals published by &lt;code&gt;myFlux&lt;/code&gt;. But what happens when an error occurs?&lt;/p&gt;
&lt;p&gt;Some of you may already know &lt;code&gt;Hooks.onOperatorDebug()&lt;/code&gt;. That&amp;rsquo;s a very helpful hook in &lt;code&gt;reactor-core&lt;/code&gt;. It transforms stack traces from this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;java.lang.IndexOutOfBoundsException: Source emitted more than one item&#xD;
  at reactor.core.publisher.MonoSingle$SingleSubscriber.onNext(MonoSingle.java:129)&#xD;
  at reactor.core.publisher.FluxRange$RangeSubscription.fastPath(FluxRange.java:129)&#xD;
  at reactor.core.publisher.FluxRange$RangeSubscription.request(FluxRange.java:107)&#xD;
  at reactor.core.publisher.MonoSingle$SingleSubscriber.request(MonoSingle.java:94)&#xD;
  at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.trySchedule(MonoSubscribeOn.java:186)&#xD;
  at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.onSubscribe(MonoSubscribeOn.java:131)&#xD;
  at reactor.core.publisher.MonoSingle$SingleSubscriber.onSubscribe(MonoSingle.java:114)&#xD;
  at reactor.core.publisher.FluxRange.subscribe(FluxRange.java:68)&#xD;
  at reactor.core.publisher.MonoSingle.subscribe(MonoSingle.java:58)&#xD;
  at reactor.core.publisher.Mono.subscribe(Mono.java:3711)&#xD;
  at reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:123)&#xD;
  at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)&#xD;
  at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)&#xD;
  at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#xD;
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)&#xD;
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)&#xD;
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&#xD;
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&#xD;
  at java.lang.Thread.run(Thread.java:748)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;into this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;java.lang.IndexOutOfBoundsException: Source emitted more than one item&#xD;
  at reactor.core.publisher.MonoSingle$SingleSubscriber.onNext(MonoSingle.java:129)&#xD;
   ...&#xD;
  at java.lang.Thread.run(Thread.java:748)&#xD;
  Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: &#xD;
Assembly trace from producer [reactor.core.publisher.MonoSingle] :&#xD;
  reactor.core.publisher.Flux.single(Flux.java:7380)&#xD;
  com.example.demo.Example.run(Example.java:13)&#xD;
Error has been observed by the following operator(s):&#xD;
  |_	Flux.single ? com.example.demo.Example.run(Example.java:13)&#xD;
  |_	Mono.subscribeOn ? com.example.demo.Example.run(Example.java:14)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;9:  public class Example {&#xD;
10:&#xD;
11:     public static void run() {&#xD;
12:        Flux.range(0, 5)&#xD;
13:            .single() // &amp;lt;-- Aha!&#xD;
14:            .subscribeOn(Schedulers.parallel())&#xD;
15:            .block();&#xD;
16:     }&#xD;
17: }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, with debug mode enabled, we can clearly identify the assembly operation where the error happened. It is like a stack-trace, but (since the execution is separated from the assembly) is a back-trace.&lt;/p&gt;
&lt;p&gt;You may think: &amp;ldquo;Great, now I want it in production!&amp;rdquo; - and so do we. But when you use &lt;code&gt;Hooks.onOperatorDebug()&lt;/code&gt;, we have to do heavy-weight stack walking at assembly time to capture the call-site every time you call an operator like &lt;code&gt;.map(...)&lt;/code&gt;, even if your code will never throw an error! This is due to a lack of call-site tracing in Java, where the only alternatives are &lt;code&gt;new Exception().getStackTrace()&lt;/code&gt; or &lt;code&gt;StackWalker&lt;/code&gt; (in Java 9+).&lt;/p&gt;
&lt;p&gt;Clearly, we cannot use this approach in production, so we made a tool for that!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ReactorDebugAgent&lt;/code&gt; from the &lt;a href="http://github.com/reactor/reactor-tools"&gt;reactor-tools project&lt;/a&gt; is a Java agent that helps you debug exceptions in your application without paying a runtime cost (unlike &lt;code&gt;Hooks.onOperatorDebug()&lt;/code&gt;).&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;?? This project is in incubating phase and may or may not become a standalone project or a module of &lt;a href="https://github.com/reactor/reactor-core"&gt;https://github.com/reactor/reactor-core&lt;/a&gt; in the future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It transforms (via bytecode transformation) chains like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;Flux.range(0, 5)&#xD;
       .single()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;Flux flux = Flux.range(0, 5);&#xD;
flux = Hooks.addCallSiteInfo(flux, &amp;quot;Flux.range\n foo.Bar.baz(Bar.java:21)&amp;quot;));&#xD;
flux = flux.single();&#xD;
flux = Hooks.addCallSiteInfo(flux, &amp;quot;Flux.single\n foo.Bar.baz(Bar.java:22)&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable it, you need to initialize the agent first:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;ReactorDebugAgent.init();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;?? Since the implementation will instrument your classes when they are loaded, the best place to put it is before everything else in your &lt;code&gt;main(String[])&lt;/code&gt; method:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;public static void main(String[] args) {&#xD;
    ReactorDebugAgent.init();&#xD;
    SpringApplication.run(Application.class, args);&#xD;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#conclusion" class="anchor" name="conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We hope that these tools will make your life as a developer easier and make you feel more comfortable with Project Reactor!&lt;/p&gt;&lt;h2&gt;&lt;a href="#links" class="anchor" name="links"&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/reactor/BlockHound"&gt;https://github.com/reactor/BlockHound&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/reactor/BlockHound/blob/master/docs/how_it_works.md"&gt;https://github.com/reactor/BlockHound/blob/master/docs/how_it_works.md&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/reactor/reactor-tools"&gt;https://github.com/reactor/reactor-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Tool Suite 3.9.8 released</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/27/spring-tool-suite-3-9-8-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2019-03-27:3614</id>
    <updated>2019-03-27T12:34:55Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;Hey!&lt;/p&gt;
&lt;p&gt;I am happy to announce the 3.9.8 maintenance release of the Spring Tool Suite 3 (STS3).&lt;/p&gt;
&lt;p&gt;Highlights from this release include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;updated to Eclipse 2019-03 release&lt;/li&gt;
  &lt;li&gt;quick text search allows you to switch between modal and non-modal mode&lt;/li&gt;
  &lt;li&gt;quick test search allows you to limit search scope to specific files&lt;/li&gt;
  &lt;li&gt;new tab for running boot apps that show live data from the apps environment&lt;/li&gt;
  &lt;li&gt;various bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To download the distributions, please go visit:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Tool Suite 3: &lt;a href="https://spring.io/tools3/sts/all"&gt;&lt;a href="https://spring.io/tools3/sts/all"&gt;https://spring.io/tools3/sts/all&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Detailed new and noteworthy notes can be found here: &lt;a href="https://docs.spring.io/sts/nan/v398/NewAndNoteworthy.html"&gt;STS 3.9.8 New &amp;amp; Noteworthy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;STS 3.9.9 is scheduled to be released on top of Eclipse 2019-06 in late June 2019.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring (Happy 15th Birthday Spring!) - March 26, 2019</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/26/this-week-in-spring-happy-15th-birthday-spring-march-26-2019" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-26:3613</id>
    <updated>2019-03-26T19:34:00Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! I&amp;rsquo;m in Pleasanton, CA, visiting one of Pivotal&amp;rsquo;s large customers, and then tomorrow it&amp;rsquo;s off to New York City for my talk there at the Kafka Summit with the &lt;a href="http://twitter.com/tlberglund"&gt;excellent Tim Berglund&lt;/a&gt; and &lt;a href="http://twitter.com/WattersJames"&gt;James Watters&lt;/a&gt;. Join us! Then, next week it&amp;rsquo;s off to South Africa (for the SpringOne Tour shows in &lt;a href="https://springonetour.io/2019/cape-town"&gt;Capetown&lt;/a&gt; and &lt;a href="https://springonetour.io/2019/johannesburg"&gt;Johannesburg&lt;/a&gt;) and then it&amp;rsquo;s off &lt;a href="https://conference.mscc.mu/speaker/f2617bc2-d35e-4fd7-9cea-02060f3e1608"&gt;to Mauritius for the DevConf&lt;/a&gt; - if you&amp;rsquo;re in any of those places, &lt;a href="http://twitter.com/Starbuxman"&gt;don&amp;rsquo;t hesitate to say hi!&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Also, totally worth including that on Sunday Spring Framework marked the 15th anniversary of its release on the 25th of March, 2004! Happy 15th birthday, Spring! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/26/spring-cloud-stream-germantown-m1-2-2-0-m1-release-announcement"&gt;Spring Cloud Stream Germantown.M1 /2.2.0.M1 Release Announcement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/22/spring-boot-for-apache-geode-pivotal-gemfire-1-0-0-m4-released"&gt;Spring Boot for Apache Geode &amp;amp; Pivotal GemFire 1.0.0.M4 Released!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/21/spring-initializr-updates"&gt;Spring Initializr updates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;In last week&amp;rsquo;s &lt;a href="https://spring.io/blog/2019/03/21/a-bootiful-podcast-cqrs-with-axoniq-s-steven-van-beelen-and-pivotal-s-ben-wilcock"&gt;&lt;em&gt;A Bootiful Podcast&lt;/em&gt; installment I talked all things Axon and CQRS with AxonIQ&amp;rsquo;s Steven van Beelen and Pivotal&amp;rsquo;s Ben Wilcock&lt;/a&gt;. Don&amp;rsquo;t miss it!&lt;/li&gt;
  &lt;li&gt;In last week&amp;rsquo;s (extra, and extra short) Spring Tips I looked at reactive MySQL support &lt;a href="https://spring.io/blog/2019/03/20/spring-tips-reactive-mysql-support-with-jasync-sql-and-r2dbc"&gt;with Jasync SQL and R2DBC&lt;/a&gt;. It&amp;rsquo;s fun to see all the new reactive options emerging.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/20/announcing-general-availability-of-spring-cloud-function-2-1-0-m1"&gt;Announcing General Availability of Spring Cloud Function - 2.1.0.M1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Want to learn all about Spring Cloud Contract from the source? Check out this OReilly media course &lt;a href="https://www.oreilly.com/library/view/hands-on-guide-to/9780135598436/"&gt;by Spring Cloud Contract founder Marcin Grzejszczak &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/springboot/status/1108750526433370112"&gt;The Spring Initializr now shows the dependencies again&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Interesting insight from Roy T. Fielding, the creator of REST and one of the major contributors to HTTP itself, on what &amp;ldquo;REST&amp;rdquo; is: &amp;ldquo;I disagree that the popular understanding of the term is different. What is different is the desire of certain companies, authors, &lt;a href="https://twitter.com/fielding/status/1108092713516163072"&gt;and speakers to say REST when they know it is just HTTP; not because they don&amp;rsquo;t know the meaning&lt;/a&gt;. Put another way: don&amp;rsquo;t say &amp;rdquo;REST&amp;quot; when you&amp;rsquo;re not using things like hypermedia (HATEOAS). I need to do better here, too.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://thenewstack.io/spring-functions-serverless-and-you/"&gt;&lt;em&gt;Spring, Functions, Serverless and You&lt;/em&gt;, a nice post on The New Stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;this is a nice post on OAuth security with Spring &lt;a href="https://www.javacodegeeks.com/2019/03/quick-guide-oauth-spring-security.html"&gt;on the Java Code Geeks&lt;/a&gt;. Enjoy!&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Stream Germantown.M1 /2.2.0.M1 Release Announcement</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/26/spring-cloud-stream-germantown-m1-2-2-0-m1-release-announcement" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Oleg Zhurakousky</name>
    </author>
    <id>tag:spring.io,2019-03-26:3612</id>
    <updated>2019-03-26T17:05:50Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce the first Milestone of the Spring Cloud Stream Germantown release train - Germantown.M1/2.2.0.M1.&lt;/p&gt;
&lt;p&gt;Spring Cloud Stream Germantown 2.2.0.M1 is available for use in the &lt;a href="http://repo.spring.io/libs-milestone-local/org/springframework/cloud/spring-cloud-stream/2.2.0.M1/"&gt;Spring Milestone&lt;/a&gt; repository. &lt;/p&gt;&lt;h3&gt;&lt;a href="#some-of-the-highlights" class="anchor" name="some-of-the-highlights"&gt;&lt;/a&gt;Some of the highlights:&lt;/h3&gt;&lt;h5&gt;&lt;a href="#improved-home-page-and-user-documentation" class="anchor" name="improved-home-page-and-user-documentation"&gt;&lt;/a&gt;Improved Home page and User Documentation&lt;/h5&gt;
&lt;p&gt;Please check out our new &lt;a href="https://spring.io/projects/spring-cloud-stream#overview"&gt;home page&lt;/a&gt; and &lt;a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-stream/2.2.0.M1/home.html"&gt;user guide&lt;/a&gt;&lt;/p&gt;&lt;h5&gt;&lt;a href="#further-functional-programming-enhancements" class="anchor" name="further-functional-programming-enhancements"&gt;&lt;/a&gt;Further functional programming enhancements&lt;/h5&gt;
&lt;p&gt;We&amp;rsquo;ve added additional &lt;a href="https://github.com/spring-cloud/spring-cloud-stream/issues/1590"&gt;functional programming enhancements and simplifications&lt;/a&gt; where you no longer required to provide &lt;code&gt;@EnableBinding&lt;/code&gt; annotation and in some cases you may not need spring.cloud.stream.definition` property. Consider the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@SpringBootApplication&#xD;
public class SimpleFunctionRabbitDemoApplication {&#xD;
&#xD;
    public static void main(String[] args) throws Exception {&#xD;
        SpringApplication.run(SimpleFunctionRabbitDemoApplication.class);&#xD;
    }&#xD;
&#xD;
    @Bean&#xD;
    public Function&amp;lt;String, String&amp;gt; echo() {&#xD;
        return v -&amp;gt; v;&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without any additional property and/or annotation the above is a fully functioning Spring Cloud Stream application bound as &lt;code&gt;Processor&lt;/code&gt; based on what framework was able to determine from the above code. Subsequently the following would be bound as &lt;code&gt;Sink&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@SpringBootApplication&#xD;
public class SimpleFunctionRabbitDemoApplication {&#xD;
&#xD;
    public static void main(String[] args) throws Exception {&#xD;
        SpringApplication.run(SimpleFunctionRabbitDemoApplication.class);&#xD;
    }&#xD;
&#xD;
    @Bean&#xD;
    public Consumer&amp;lt;String&amp;gt; log() {&#xD;
        return System.out::println;&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice there is no longer &lt;code&gt;@EnableBinding&lt;/code&gt; annotation nor &lt;code&gt;spring.cloud.stream.function.definition&lt;/code&gt; property as the framework was able to determine the intention given that there is only one functional bean available in the application context. In the event there are more then one and/or if you want to &lt;a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-stream/2.2.0.M1/spring-cloud-stream.html#_functional_composition"&gt;compose function&lt;/a&gt; from several, you can still provide &lt;code&gt;spring.cloud.stream.function.definition&lt;/code&gt; property&lt;/p&gt;&lt;h5&gt;&lt;a href="#functional-kafka-streams" class="anchor" name="functional-kafka-streams"&gt;&lt;/a&gt;Functional Kafka Streams&lt;/h5&gt;
&lt;p&gt;Keeping with the spirit of the main theme that we are driving in Germantown, the Kafka Streams binder also now supports writing applications using a functional programming model. Instead of using &lt;code&gt;StreamListener&lt;/code&gt; and &lt;code&gt;SendTo&lt;/code&gt; for composing your processors, you can simply define beans of type &lt;code&gt;java.util.Function|Consumer&lt;/code&gt; and the binder will delegate to appropriate bindings. This &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-binder-kafka/blob/master/spring-cloud-stream-binder-kafka-streams/src/test/java/org/springframework/cloud/stream/binder/kafka/streams/function/KafkaStreamsBinderWordCountFunctionTests.java#L175"&gt;feature is still evolving&lt;/a&gt; in Kafka Streams binder and watch this space for more improvements, details and sample applications as we progress through further milestones of Germantown.&lt;/p&gt;&lt;h5&gt;&lt;a href="#retry-template-per-binding" class="anchor" name="retry-template-per-binding"&gt;&lt;/a&gt;Retry template per binding&lt;/h5&gt;
&lt;p&gt;Ability to configure RetryTemplate &lt;a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-stream/2.2.0.M1/spring-cloud-stream.html#_retry_template"&gt;per binding&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Numerous &lt;a href="https://github.com/spring-cloud/spring-cloud-stream/issues?q=milestone%3A2.2.0.M1+is%3Aclosed"&gt;enhancements and bug fixes&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;NOTE:&lt;br/&gt;If the applications are created from Spring Initializr, they need to add this BOM snippet in maven dependency management before the spring-cloud BOM declaration, otherwise you&amp;rsquo;ll end up with the latest snapshot:&lt;/p&gt;
  &lt;pre&gt;&lt;code class="prettyprint"&gt;&amp;lt;dependency&amp;gt;&#xD;
           &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
           &amp;lt;artifactId&amp;gt;spring-cloud-stream-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
           &amp;lt;version&amp;gt;Germantown.M1&amp;lt;/version&amp;gt;&#xD;
           &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
           &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also, please keep an eye on one of our newest &lt;a href="https://github.com/spring-cloud/spring-cloud-stream-binder-aws-kinesis/releases/tag/v1.1.0.RELEASE"&gt;AWS Kinesis binder&lt;/a&gt; which was just released v1.1.0. &lt;/p&gt;&lt;h4&gt;&lt;a href="#next-steps" class="anchor" name="next-steps"&gt;&lt;/a&gt;Next Steps&lt;/h4&gt;
&lt;p&gt;As always, we welcome feedback and contributions, so please reach out to us on &lt;a href="https://stackoverflow.com/questions/tagged/spring-cloud-stream"&gt;Stackoverflow&lt;/a&gt; or &lt;a href="https://github.com/spring-cloud/spring-cloud-stream/"&gt;GitHub&lt;/a&gt; or via &lt;a href="https://gitter.im/spring-cloud/spring-cloud-stream"&gt;Gitter&lt;/a&gt;. &lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot for Apache Geode &amp; Pivotal GemFire 1.0.0.M4 Released!</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/22/spring-boot-for-apache-geode-pivotal-gemfire-1-0-0-m4-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>John Blum</name>
    </author>
    <id>tag:spring.io,2019-03-22:3611</id>
    <updated>2019-03-22T16:46:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the Spring, Apache Geode and Pivotal GemFire communities, I am pleased to announce the release of &lt;em&gt;Spring Boot for Apache Geode &amp;amp; Pivotal GemFire&lt;/em&gt; (SBDG) &lt;code&gt;1.0.0.M4&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Special appreciation goes out to &lt;a href="https://spring.io/team/jlong"&gt;@starbuxman&lt;/a&gt; for his invaluable feedback after &lt;em&gt;SpringOne Platform&lt;/em&gt; 2018.  And, if you have not seen Josh&amp;#8217;s Spring Tip &lt;a href="https://spring.io/blog/2019/02/13/spring-tips-apache-geode"&gt;video&lt;/a&gt; on Apache, please check it out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="new"&gt;&lt;a class="anchor" href="#new"&gt;&lt;/a&gt;What&amp;#8217;s New&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Among a few minor updates, Milestone 4 adds the following new capabilities:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Externalized configuration support with &lt;em&gt;Spring Boot&amp;#8217;s&lt;/em&gt; Configuration Processor and SBDG provided &lt;code&gt;@ConfigurationProperties&lt;/code&gt; classes (Read &lt;a href="https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/1.0.0.BUILD-SNAPSHOT/reference/htmlsingle/#geode-configuration"&gt;here&lt;/a&gt; for more details).  Inside STS or IJ Enterprise addition, developers will have the added convenience of auto-completion and content assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GemFire/Geode nodes can now be named with the &lt;code&gt;spring.application.name&lt;/code&gt; property.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The GemFire/Geode Spring Boot starters now include Spring Shell as a runtime dependency, which is convenient when enabling and using GemFire/Geode&amp;#8217;s management services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provided a workaround to an &lt;a href="https://github.com/spring-cloud/spring-cloud-commons/issues/476"&gt;issue&lt;/a&gt; in Spring Cloud Commons .&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For complete list of changes, see the &lt;a href="https://github.com/spring-projects/spring-boot-data-geode/blob/1.0.0.M4/spring-geode/src/main/resources/changelog.txt#L7-L21"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can acquire the bits from the Spring &lt;code&gt;libs-milestone&lt;/code&gt; repository:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock xml"&gt;
&lt;div class="title"&gt;Maven&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code&gt;&amp;lt;repositories&amp;gt;
    &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;spring-libs-milestone&amp;lt;/id&amp;gt;
        &amp;lt;name&amp;gt;Spring Milestone Maven Repository&amp;lt;/name&amp;gt;
        &amp;lt;url&amp;gt;https://repo.spring.io/libs-milestone&amp;lt;/url&amp;gt;
    &amp;lt;/repository&amp;gt;
&amp;lt;/repositories&amp;gt;

&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.geode&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-geode-starter&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.0.0.M4&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="title"&gt;Gradle&lt;/div&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;repository {
  maven { url "https://repo.spring.io/libs-milestone" }
}

dependencies {
  compile 'org.springframework.geode:spring-geode-starter:1.0.0.M4'
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To switch from Apache Geode to Pivotal GemFire simply, change the Spring Boot starter from &lt;code&gt;spring-geode-starter&lt;/code&gt; to &lt;code&gt;spring-gemfire-starter&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="next"&gt;&lt;a class="anchor" href="#next"&gt;&lt;/a&gt;What&amp;#8217;s Next&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Next up will be SBDG &lt;code&gt;1.0.0.RC1&lt;/code&gt;.  In this release we will be adding samples demonstrating how to effectively use Apache Geode or Pivotal GemFire in a Spring context with Spring Boot.  We will be spicing up the documentation in preparation for the final GA to ensure that users are successful with SBDG in all their UCs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;code&gt;1.0.0.GA&lt;/code&gt; will follow shortly after RC1 as will &lt;code&gt;1.1.0.M1&lt;/code&gt;, which will rebase SBDG on Spring Boot 2.1, Spring Framework 5.1 and Spring Data Lovelace.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="anchor" href="#conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As always feedback is appreciated and welcomed.  Please give this release a try and let us know if you have any ideas, issues or recommendations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-boot-data-geode/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot-data-geode/pulls"&gt;PR&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Initializr updates</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/21/spring-initializr-updates" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Damien Vitrac</name>
    </author>
    <id>tag:spring.io,2019-03-18:3606</id>
    <updated>2019-03-21T15:20:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that &lt;strong&gt;Spring Initializr&lt;/strong&gt; has been updated and is now available on &lt;a href="https://start.spring.io"&gt;start.spring.io&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#ui-changes-listening-to-your-feedback" class="anchor" name="ui-changes-listening-to-your-feedback"&gt;&lt;/a&gt;UI changes - listening to your feedback&lt;/h2&gt;
&lt;p&gt;Following the last revision, the &lt;a href="https://spring.io/blog/2019/03/05/spring-initializr-new-ui"&gt;main feedback&lt;/a&gt; we received was about the missing list of dependencies. Some community members seemed to be looking at this list for information purposes (not necessarily using the website to generate a new app), while others would just like to see what&amp;rsquo;s available.&lt;/p&gt;
&lt;img src="https://static.spring.io/blog/damienvitrac/20190318/initializr.png"&gt;
&lt;p&gt;While &lt;a href="https://start.spring.io"&gt;start.spring.io&lt;/a&gt; seems like a very simple service, generating applications with a simple HTML form, there&amp;rsquo;s much more to it - this round of feedback taught us that we need to double-down on product discovery and user centered design.&lt;/p&gt;
&lt;p&gt;We brought the &lt;strong&gt;dependency list&lt;/strong&gt; back to the page but in a way that will help us to better understand how the website is being used and how to improve it. We hope that the community will find in that list what was missing in the previous version.&lt;/p&gt;
&lt;p&gt;Of course, we fixed a few HTML/CSS issues and improved version incompatibility messages to help you select the appropriate Spring Boot version.&lt;/p&gt;&lt;h2&gt;&lt;a href="#architecture" class="anchor" name="architecture"&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;This application is still made of two parts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;a href="https://github.com/spring-io/initializr"&gt;Initializr library&lt;/a&gt; that contains the project generation logic and the Web API&lt;/li&gt;
  &lt;li&gt;The &lt;a href="https://github.com/spring-io/start.spring.io"&gt;start.spring.io&lt;/a&gt; service instance, with the specifics behind the instance running in production&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because the &lt;strong&gt;Web UI&lt;/strong&gt; changes will be more and more involved, we&amp;rsquo;ve decided to move all Web UI-specific code to the start.spring.io project. This will hopefully clarify things. If you&amp;rsquo;re interested in running a service very similar to start.spring.io, you should now fork the start.spring.io project. If you&amp;rsquo;d like to write your own Web UI or work on core changes, then using the &lt;strong&gt;Initializr library&lt;/strong&gt; is a good starting point.&lt;/p&gt;&lt;h2&gt;&lt;a href="#what-rsquo-s-next" class="anchor" name="what-rsquo-s-next"&gt;&lt;/a&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;p&gt;Over the next couple of weeks we will be conducting &lt;strong&gt;user interviews&lt;/strong&gt; to gain better insights on how to improve the website experience and a deeper understanding of the &lt;strong&gt;&amp;ldquo;whys&amp;rdquo;&lt;/strong&gt; behind how users are interacting with the service. &lt;/p&gt;
&lt;p&gt;As we cannot interview all of our users (we appreciate you all!), we invite you to leave your input and thoughts with our optional &lt;a href="https://docs.google.com/forms/d/1CsQaJAYFntD8FkBz-2zjtew8maj2JWxV2Fv2ugea_VA/viewform?ts=5c8f9ee0&amp;edit_requested=true"&gt;anonymous survey&lt;/a&gt;. This will allow us to build a larger picture of how people are using the service and the expectations and wants from the community. &lt;/p&gt;
&lt;p&gt;Thank you for your feedback and support as we continue on this journey.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: CQRS with AxonIQ's Steven van Beelen and Pivotal's Ben Wilcock</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/21/a-bootiful-podcast-cqrs-with-axoniq-s-steven-van-beelen-and-pivotal-s-ben-wilcock" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-21:3610</id>
    <updated>2019-03-21T07:57:43Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! In this week&amp;rsquo;s installment &lt;a href="http://twitter.com/Starbuxman"&gt;Josh Long&lt;/a&gt; talks to AxonIQ&amp;rsquo;s Steven van Beelen, lead of the Axon project, and Pivotal&amp;rsquo;s Ben Wilcock, on CQRS, event-sourcing, event-storming, microservices, Spring Boot and the long camaraderie shared by Axon and Spring.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Axon framework lead &lt;a href="http://twitter.com/smcvbeelen"&gt;Steve van Beelen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pivotal product marketing manager &lt;a href="http://twitter.com/benbravo73"&gt;Ben Wilcock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Axon founder and AxonIQ CEO &lt;a href="http://twitter.com/allardbz"&gt;Allard Buijze&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://axoniq.io/"&gt;AxonIQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/593419098&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true"&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Reactive MySQL Support with Jasync SQL and R2DBC</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/20/spring-tips-reactive-mysql-support-with-jasync-sql-and-r2dbc" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-21:3609</id>
    <updated>2019-03-20T23:59:00Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! Welcome to yet another super-quick mid-season interregnum installment of Spring Tips where we look at &lt;em&gt;super early/preliminary&lt;/em&gt; new R2DBC support for reactive MySQL in the Jasync SQL project. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DvO4zLVDkMs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Announcing General Availability of Spring Cloud Function - 2.1.0.M1</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/20/announcing-general-availability-of-spring-cloud-function-2-1-0-m1" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Oleg Zhurakousky</name>
    </author>
    <id>tag:spring.io,2019-03-20:3608</id>
    <updated>2019-03-20T16:07:13Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce first milestone of the Spring Cloud Function - 2.1.0.M1.&lt;/p&gt;
&lt;p&gt;Individual modules of Spring Cloud Function 2.1.0.M1 are available for use in the &lt;a href="https://repo.spring.io/libs-snapshot/org/springframework/cloud/"&gt;Spring Milestone&lt;/a&gt; repository.&lt;br/&gt;This release encompasses the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Some of the features that has always been available in &lt;em&gt;bean factory based&lt;/em&gt; function catalog are now part of the &lt;strong&gt;&lt;em&gt;functional form&lt;/em&gt;&lt;/strong&gt; (see &lt;a href="https://spring.io/blog/2018/10/22/functional-bean-registrations-in-spring-cloud-function"&gt;Dave Syer&amp;rsquo;s blog&lt;/a&gt; for more details on &lt;em&gt;functional form&lt;/em&gt;) :
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Multiple endpoint support&lt;/em&gt; - ability to map multiple HTTP endpoints the same way one would expect in conventional context configuration.&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Function composition&lt;/em&gt; - ability to compose function (e.g., &lt;code&gt;foo|bar&lt;/code&gt; or &lt;code&gt;foo,bar&lt;/code&gt;).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ability to communicate and retain meta-information via Message headers for cases where Message function is composed with non-Message (e.g., &lt;code&gt;Function&amp;lt;Message&amp;lt;?&amp;gt;&amp;gt;, Message&amp;lt;?&amp;gt;&amp;gt;&lt;/code&gt; is composed with &lt;code&gt;Function&amp;lt;?, ?&amp;gt;&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Support for implicit function composition where &lt;code&gt;catalog.lookup(&amp;quot;&amp;quot;)&lt;/code&gt;, &lt;code&gt;catalog.lookup(&amp;quot;|&amp;quot;)&lt;/code&gt;, &lt;code&gt;catalog.lookup(&amp;quot;foo|&amp;quot;)&lt;/code&gt; or &lt;code&gt;catalog.lookup(&amp;quot;|bar&amp;quot;)&lt;/code&gt; are all valid lookups providing container with enough information to determine your intentions. For example, &lt;em&gt;empty string&lt;/em&gt; simply implies there is only one Function in catalog and no explicit name should be provided.&lt;/li&gt;
  &lt;li&gt;Creating Supplier from remote HTTP endpoint where one can define the &lt;em&gt;sink url&lt;/em&gt; (destination) and the &lt;em&gt;source url&lt;/em&gt; (source) and use the app as a pipeline for events from/to HTTP.&lt;/li&gt;
  &lt;li&gt;AWS &lt;a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-function/2.1.0.M1/aws.html#_custom_runtime"&gt;Custom Runtime&lt;/a&gt; feature.&lt;/li&gt;
  &lt;li&gt;Other minor &lt;a href="https://github.com/spring-cloud/spring-cloud-function/milestone/16?closed=1"&gt;enhancements and bug-fixes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, there was a major update to both the &lt;a href="https://spring.io/projects/spring-cloud-function"&gt;project&amp;rsquo;s home page&lt;/a&gt; as well as &lt;a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-function/2.1.0.M1/home.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Spring Cloud Function 2.1.x is dependent on spring-boot 2.1.x.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-cloud/spring-cloud-function/labels/ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-cloud-function"&gt;&lt;code&gt;spring-cloud-function&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-function/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-function"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-function/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-function/2.0.0.RELEASE/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - March 19th, 2019</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/19/this-week-in-spring-march-19th-2019" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-19:3607</id>
    <updated>2019-03-19T11:57:01Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! What a wild and wonderful week of Spring it&amp;rsquo;s been! This week I&amp;rsquo;m in London, UK for the epic SpringOne Tour event and customer visits, then I&amp;rsquo;m off to Vienna, Austria and then I&amp;rsquo;m off to Amsterdam, NL for the SpringOne Tour event there. If you&amp;rsquo;re in any of these &lt;a href="http://twitter.com/Starbuxman"&gt;places please say hi!&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/18/spring-cloud-data-flow-2-0-1-ga-released"&gt;Spring Cloud Data Flow 2.0.1 GA Released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/15/a-bootiful-podcast-spring-security-engineer-and-oauth-slayer-joe-grandja"&gt;A Bootiful Podcast: Spring Security engineer and OAuth slayer Joe Grandja&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hi Spring fans! I did a special season mid-interregnum video on Spring Tips: &lt;a href="https://spring.io/blog/2019/03/14/spring-tips-be-lazy-and-fast-with-spring-boot-2-2-m1"&gt;&lt;em&gt;Be Lazy AND Fast with Spring Boot 2.2.M1!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2019/03/14/lazy-initialization-in-spring-boot-2-2"&gt;Lazy Initialization in Spring Boot 2.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Integrating Spring Cloud with Kubernetes is really simple! In this video, Paul Czarkowski is &lt;a href="https://www.youtube.com/watch?v=jR35JKq5rmc"&gt;showing how your Spring Boot app can leverage Kubernetes features (such as ConfigMap) without having to change your source code!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/spring_io/status/1107666963592110081"&gt;Have you secured your tickets for the Spring I/O conference in bootiful Barcelona, Spain?&lt;/a&gt; I&amp;rsquo;ll be there, co-presenting four different talks with my friends in the ecosystem. Join us!&lt;/li&gt;
  &lt;li&gt;the Java Code Geeks have a nice post on using the &lt;a href="https://examples.javacodegeeks.com/enterprise-java/spring/boot/spring-boot-crossorigin-annotation-example/"&gt;Spring Boot &lt;code&gt;@CrossOrigin&lt;/code&gt; annotation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/springcloud/status/1106776301090807808"&gt;Have you signed up for SpringOne Platform 2019&lt;/a&gt;? Get your tickets now!&lt;/li&gt;
  &lt;li&gt;Great tweet from Spring Data lead Oliver Drotbohm &lt;a href="https://twitter.com/odrotbohm/status/1106645111402913794?s=20"&gt;on Twitter: &amp;quot;&amp;hellip;when comparing the different frameworks&amp;hellip;, more of those participants who implemented some security achieved a high score for security through Spring’s default implementation.“&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nice! &lt;a href="https://twitter.com/sdeleuze/status/1106610144744562688?s=12"&gt;Kotlin coroutine support in Spring WebFlux&lt;/a&gt; is coming!&lt;/li&gt;
  &lt;li&gt;Good news everybody! In February &lt;a href="https://twitter.com/SpringData/status/1106550030410883072"&gt;Spring Data crossed 2.5 million downloads for the first time!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out the slides from Olga Maciaszek-Sharma and Marcin Grzejszczak on using &lt;a href="https://twitter.com/springcloud/status/1106522322113101825"&gt;Spring in a post Spring Cloud Netflix world&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Congrats Spring Security team member Joe Grandja &lt;a href="https://twitter.com/springcentral/status/1106210126627856390"&gt;on just passing your 3 year work-anniversary on the Spring team!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I love this post from Spring Cloud Stream teammember &lt;a href="https://www.confluent.io/blog/spring-for-apache-kafka-deep-dive-part-2-apache-kafka-spring-cloud-stream"&gt;Soby Chacko on using Spring Cloud Stream and Kafka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow 2.0.1 GA Released</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/18/spring-cloud-data-flow-2-0-1-ga-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Ilayaperumal Gopinathan</name>
    </author>
    <id>tag:spring.io,2019-03-18:3605</id>
    <updated>2019-03-18T16:12:02Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;a href="https://cloud.spring.io/spring-cloud-dataflow/"&gt;Spring Cloud Data Flow&lt;/a&gt; team is pleased to announce the release of 2.0.1 GA of Data Flow. Follow the Getting Started guides for running on &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/2.0.1.RELEASE/reference/htmlsingle/#getting-started-local"&gt;Local&lt;/a&gt;, &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/2.0.1.RELEASE/reference/htmlsingle/#getting-started-cloudfoundry"&gt;Cloud Foundry&lt;/a&gt;, and &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/2.0.1.RELEASE/reference/htmlsingle/#getting-started-kubernetes"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is a minor release with mostly bug fixes and documentation enhancements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Here are the highlights of this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kubernetes deployment configuration for Skipper server is now backed by MySQL as the default database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove extraneous Spring Data Redis dependency to fix Spring Cloud Data Flow server health check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved Getting Started documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fixes on Spring Cloud Data Flow and Spring Cloud Data Flow UI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the out-of-the-box stream apps from the Documentation examples now use Einstein SR2.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="stay-in-touch"&gt;&lt;a class="anchor" href="#stay-in-touch"&gt;&lt;/a&gt;Stay in touch&amp;#8230;&amp;#8203;&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As always, we welcome feedback and contributions, so please reach out to us on &lt;a href="https://stackoverflow.com/questions/tagged/spring-cloud-dataflow"&gt;Stackoverflow&lt;/a&gt; or &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/issues"&gt;GitHub&lt;/a&gt; or via &lt;a href="https://gitter.im/spring-cloud/spring-cloud-dataflow"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Spring Security engineer and OAuth slayer Joe Grandja</title>
    <link rel="alternate" href="https://spring.io/blog/2019/03/15/a-bootiful-podcast-spring-security-engineer-and-oauth-slayer-joe-grandja" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2019-03-14:3603</id>
    <updated>2019-03-15T00:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi Spring fans! Welcome to another installment of a Bootiful Podcast! This week &lt;a href="http://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to &lt;a href="https://twitter.com/joegrandja"&gt;Joe Grandja (@joegrandja)&lt;/a&gt; who, not coincidentally, just celebrated his third anniversary working on the Spring team! Joe has been instrumental in building Spring Security 5.x and its OAuth client and resource-server support.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://spring.io/team/pivotal-joe-grandja"&gt;Joe&amp;rsquo;s team page&lt;/a&gt;&lt;br/&gt;&lt;a href="http://twitter.com/joe_grandja"&gt;Joe on Twitter&lt;/a&gt;&lt;br/&gt;&lt;a href="https://twitter.com/rob_winch/status/1106194606058815490"&gt;Joe just celebrated his third year on the team!&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/589977558%3Fsecret_token%3Ds-GoINo&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true"&gt;&lt;/iframe&gt;</content>
  </entry>
</feed>
